{"id":868873828,"lang":"cpp","lang_name":"C++","time":"6 days, 9 hours","timestamp":1672548291,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/868873828/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"13.6 MB","code":"class Solution {\npublic:\n    vector<int> searchRange(vector<int>& nums, int target) {\n        int greatRange = -1;\n        int lessRange = -1;\n        int l = nums.size();\n        int st = 0, en = l-1;\n        vector<int> ans;\n        int mid = st + (en-st)/2;\n        while(st <= en){\n            mid = st + (en-st)/2;\n            if(nums[mid] <= target) st = mid+1;\n            else if(nums[mid] > target) en = mid-1;\n        }\n        if(l!=0 && nums[mid] == target){\n            greatRange = mid;\n        }\n        else if(l!=0 && nums[mid] != target){\n            if(mid > 0 && nums[mid-1] == target) greatRange = mid-1;\n            else greatRange = -1;\n        }\n\n        cout << greatRange << endl;\n        if(greatRange != -1){\n            st = 0;\n            en = l-1;\n            int mid = st + (en-st)/2;\n            while(st <= en){\n                mid = st + (en-st)/2;\n                if(nums[mid] < target) st = mid+1;\n                else if(nums[mid] >= target) en = mid-1;\n            }\n            if(nums[mid] == target){\n                lessRange = mid;\n            }\n            else if(nums[mid] != target){\n                if(mid < l-1 && nums[mid+1] == target) lessRange = mid+1;\n                else lessRange = -1;\n            }\n            ans.push_back(lessRange);\n            ans.push_back(greatRange);\n\n        }\n        else{\n            ans.push_back(-1);\n            ans.push_back(-1);\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-first-and-last-position-of-element-in-sorted-array","has_notes":false,"notes":"","topic_tags":[]}