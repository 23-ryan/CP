{"id":868876295,"lang":"cpp","lang_name":"C++","time":"6 days, 8 hours","timestamp":1672548718,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/868876295/","is_pending":"Not Pending","title":"Search Insert Position","memory":"9.7 MB","code":"class Solution {\npublic:\n    int searchInsert(vector<int>& nums, int target) {\n        int l = nums.size();\n        int st=0, en=l-1;\n        int mid = st + (en-st)/2;\n        int ans  = -1;\n        while(st <= en){\n            mid = st + (en-st)/2;\n            if(nums[mid] == target){\n                break;\n            }\n\n            if(nums[mid] < target) st = mid + 1;\n            else if(nums[mid] > target) en = mid -1;\n        }\n        if(nums[mid] >= target) ans = mid;\n        if(nums[mid] < target) ans = mid+1;\n\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-insert-position","has_notes":false,"notes":"","topic_tags":[]}